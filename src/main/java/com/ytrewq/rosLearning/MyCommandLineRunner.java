package com.ytrewq.rosLearning;

import com.ytrewq.rosLearning.Entities.*;
import com.ytrewq.rosLearning.Services.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

import java.time.LocalDateTime;
import java.util.List;

@Component
public class MyCommandLineRunner implements CommandLineRunner {
    @Autowired
    private final AuthService customUserDetailsService;
    @Autowired
    private final PasswordEncoder passwordEncoder;
    @Autowired
    private final CourseService courseService;
    @Autowired
    private final UserService userService;
    @Autowired
    private final ThemeService themeService;
    @Autowired
    private final ThemeMaterialService themeMaterialService;
    @Autowired
    private final TaskService taskService;

    public MyCommandLineRunner(AuthService customUserDetailsService, PasswordEncoder passwordEncoder, CourseService courseService, UserService userService, ThemeService themeService, ThemeMaterialService themeMaterialService, TaskService taskService) {
        this.customUserDetailsService = customUserDetailsService;
        this.passwordEncoder = passwordEncoder;
        this.courseService = courseService;
        this.userService = userService;
        this.themeService = themeService;
        this.themeMaterialService = themeMaterialService;
        this.taskService = taskService;
    }

    @Override
    public void run(String... args) {
        User user = new User();
        user.setName("Иванов Иван Иванович");
        user.setUsername("admin");
        user.setEmail("admin@admin.admin");
        user.setRole("Штатный дебил");
        user.setDateOfRegistration(LocalDateTime.now());
        user.setAdmin(true);
        user.setPassword(passwordEncoder.encode("admin"));
        customUserDetailsService.save(user);

        User user1 = new User();
        user1.setName("Дмитриев Дмитрий Дмитриевич");
        user1.setUsername("user");
        user1.setEmail("user@user.user");
        user1.setRole("Штатный не дебил");
        user1.setDateOfRegistration(LocalDateTime.now());
        user1.setAdmin(false);
        user1.setPassword(passwordEncoder.encode("user"));
        customUserDetailsService.save(user1);

        Course course = new Course("Основы Java для начинающих", LocalDateTime.now(), "Этот курс предназначен для тех, кто хочет начать изучение языка программирования Java. Вы познакомитесь с основами синтаксиса Java, научитесь создавать простые программы и освоите базовые концепции объектно-ориентированного программирования.", null);
        courseService.save(course);
        Course course1 = new Course("Spring Boot: Введение в разработку веб-приложений", LocalDateTime.now(), "Этот курс познакомит вас с фреймворком Spring Boot, который значительно упрощает процесс разработки веб-приложений на Java. Вы узнаете, как создавать RESTful веб-сервисы, интегрировать их с базами данных и использовать Spring Boot для быстрой разработки и развертывания приложений.", null);
        courseService.save(course1);
        Course course2 = new Course("Основы машинного обучения с использованием Python", LocalDateTime.now(), "Этот курс охватывает основы машинного обучения с использованием языка программирования Python. Вы узнаете, как работать с библиотеками NumPy, Pandas и Scikit-learn, создавать и обучать модели машинного обучения, а также применять их для решения реальных задач.", null);
        courseService.save(course2);
        Course course3 = new Course("Веб-дизайн и разработка с использованием HTML, CSS и JavaScript", LocalDateTime.now(), "Этот курс охватывает основы веб-дизайна и разработки с использованием HTML, CSS и JavaScript. Вы научитесь создавать интерактивные и визуально привлекательные веб-страницы, работать с макетами и анимациями, а также интегрировать JavaScript для добавления интерактивности.", null);
        courseService.save(course3);
        Course course4 = new Course("Основы кибербезопасности", LocalDateTime.now(), "Этот курс посвящен основам кибербезопасности. Вы узнаете, как защитить свои данные и системы от киберугроз, изучите основы шифрования и аутентификации, а также методы защиты от различных видов атак.", null);
        courseService.save(course4);

        List<Course> la = List.of(course, course1, course2, course3, course4);
        userService.setUserCourses(user1, la);
        Theme theme1 = new Theme("Введение в Java", LocalDateTime.now(), "История языка, его особенности и области применения.", null, null);
        themeService.save(theme1);
        themeService.addCourseTheme(course, theme1);
        Theme theme2 = new Theme("Синтаксис Java", LocalDateTime.now(), "Основные конструкции языка, такие как переменные, операторы, условия и циклы.", null, null);
        themeService.save(theme2);
        themeService.addCourseTheme(course, theme2);
        Theme theme3 = new Theme("Объекты и классы", LocalDateTime.now(), "Основы объектно-ориентированного программирования, создание и использование классов и объектов.", null, null);
        themeService.save(theme3);
        themeService.addCourseTheme(course, theme3);

        Theme theme4 = new Theme("Введение в Spring Boot", LocalDateTime.now(), "Основные концепции и преимущества использования фреймворка.", null, null);
        themeService.save(theme4);
        themeService.addCourseTheme(course1, theme4);
        Theme theme5 = new Theme("Создание RESTful веб-сервисов", LocalDateTime.now(), "Использование Spring MVC для создания RESTful сервисов.", null, null);
        themeService.save(theme5);
        themeService.addCourseTheme(course1, theme5);
        Theme theme6 = new Theme("Интеграция с базами данных", LocalDateTime.now(), "Работа с реляционными базами данных, такими как MySQL и PostgreSQL.", null, null);
        themeService.save(theme6);
        themeService.addCourseTheme(course1, theme6);

        Theme theme7 = new Theme("Введение в машинное обучение", LocalDateTime.now(), "Введение в машинное обучение, его основные концепции и области применения.", null, null);
        themeService.save(theme7);
        themeService.addCourseTheme(course2, theme7);
        Theme theme8 = new Theme("Работа с библиотеками Python", LocalDateTime.now(), "Использование библиотек NumPy и Pandas для работы с данными в Python.", null, null);
        themeService.save(theme8);
        themeService.addCourseTheme(course2, theme8);
        Theme theme9 = new Theme("Обучение моделей", LocalDateTime.now(), "Использование библиотеки Scikit-learn для обучения моделей, таких как линейная регрессия и деревья решений.", null, null);
        themeService.save(theme9);
        themeService.addCourseTheme(course2, theme9);

        Theme theme10 = new Theme("Основы HTML", LocalDateTime.now(), "Создание структуры веб-страниц, работа с элементами и тегами.", null, null);
        themeService.save(theme10);
        themeService.addCourseTheme(course3, theme10);
        Theme theme11 = new Theme("CSS", LocalDateTime.now(), "Каскадные таблицы стилей, селекторы, свойства и их применение для стилизации веб-страниц.", null, null);
        themeService.save(theme11);
        themeService.addCourseTheme(course3, theme11);
        Theme theme12 = new Theme("JavaScript", LocalDateTime.now(), "Основы языка, работа с DOM, события и функции.", null, null);
        themeService.save(theme12);
        themeService.addCourseTheme(course3, theme12);

        Theme theme13 = new Theme("Введение в кибербезопасность", LocalDateTime.now(), "Основные понятия и угрозы.", null, null);
        themeService.save(theme13);
        themeService.addCourseTheme(course4, theme13);
        Theme theme14 = new Theme("Шифрование и аутентификация", LocalDateTime.now(), "Методы шифрования данных и аутентификации пользователей.", null, null);
        themeService.save(theme14);
        themeService.addCourseTheme(course4, theme14);
        Theme theme15 = new Theme("Сетевая безопасность", LocalDateTime.now(), "Защита сетей и устройств от атак.", null, null);
        themeService.save(theme15);
        themeService.addCourseTheme(course4, theme15);

        Task task1 = new Task("История Java", LocalDateTime.now(), "Изучите историю создания и развития языка программирования Java.", null);
        taskService.save(task1);
        taskService.addThemeTask(theme1, task1);
        Task task2 = new Task("Особенности Java", LocalDateTime.now(), "Ознакомьтесь с основными особенностями и преимуществами Java.", null);
        taskService.save(task2);
        taskService.addThemeTask(theme1, task2);
        Task task3 = new Task("Области применения Java", LocalDateTime.now(), "Определите основные области применения Java в современном программировании.", null);
        taskService.save(task3);
        taskService.addThemeTask(theme1, task3);
        Task task4 = new Task("Установка Java Development Kit (JDK)", LocalDateTime.now(), "Установите JDK и настройте среду разработки для работы с Java.", null);
        taskService.save(task4);
        taskService.addThemeTask(theme1, task4);
        Task task5 = new Task("Написание и выполнение первой программы на Java", LocalDateTime.now(), "Напишите и выполните простую программу на Java, выводящую приветствие на экран.", null);
        taskService.save(task5);
        taskService.addThemeTask(theme1, task5);
        Task task6 = new Task("Переменные и типы данных", LocalDateTime.now(), "Создайте программу, которая объявляет и использует переменные различных типов данных (int, double, boolean и т.д.).", null);
        taskService.save(task6);
        taskService.addThemeTask(theme2, task6);
        Task task7 = new Task("Операторы и выражения", LocalDateTime.now(), "Напишите программу, использующую арифметические, логические и условные операторы.", null);
        taskService.save(task7);
        taskService.addThemeTask(theme2, task7);
        Task task8 = new Task("Условные конструкции (if-else)", LocalDateTime.now(), "Создайте программу, которая использует условные конструкции для выполнения различных действий в зависимости от условия.", null);
        taskService.save(task8);
        taskService.addThemeTask(theme2, task8);
        Task task9 = new Task("Циклы (for, while)", LocalDateTime.now(), "Напишите программу, использующую циклы для выполнения повторяющихся задач.", null);
        taskService.save(task9);
        taskService.addThemeTask(theme2, task9);
        Task task10 = new Task("Массивы", LocalDateTime.now(), "Создайте программу, которая объявляет и использует одномерные и многомерные массивы.", null);
        taskService.save(task10);
        taskService.addThemeTask(theme2, task10);
        Task task11 = new Task("Создание класса и объекта", LocalDateTime.now(), "Напишите класс с методами и создайте объект этого класса. Выведите информацию об объекте на экран.", null);
        taskService.save(task11);
        taskService.addThemeTask(theme3, task11);
        Task task12 = new Task("Конструкторы", LocalDateTime.now(), "Создайте класс с конструкторами и используйте их для инициализации объектов.", null);
        taskService.save(task12);
        taskService.addThemeTask(theme3, task12);
        Task task13 = new Task("Методы и параметры", LocalDateTime.now(), "Напишите класс с методами, принимающими и возвращающими параметры.", null);
        taskService.save(task13);
        taskService.addThemeTask(theme3, task13);
        Task task14 = new Task("Наследование", LocalDateTime.now(), "Создайте класс-наследник от базового класса и переопределите методы.", null);
        taskService.save(task14);
        taskService.addThemeTask(theme3, task14);
        Task task15 = new Task("Полиморфизм", LocalDateTime.now(), "Напишите программу, демонстрирующую использование полиморфизма через переопределение методов.", null);
        taskService.save(task15);
        taskService.addThemeTask(theme3, task15);

        Task task16 = new Task("Установка Spring Boot", LocalDateTime.now(), "Установите Spring Boot и настройте среду разработки.", null);
        taskService.save(task16);
        taskService.addThemeTask(theme4, task16);
        Task task17 = new Task("Создание простого приложения", LocalDateTime.now(), "Создайте простое Spring Boot приложение и запустите его.", null);
        taskService.save(task17);
        taskService.addThemeTask(theme4, task17);
        Task task18 = new Task("Использование автоконфигурации", LocalDateTime.now(), "Используйте автоконфигурацию Spring Boot для настройки зависимостей.", null);
        taskService.save(task18);
        taskService.addThemeTask(theme4, task18);
        Task task19 = new Task("Настройка конфигурации", LocalDateTime.now(), "Настройте конфигурационные файлы Spring Boot (application.properties, application.yml).", null);
        taskService.save(task19);
        taskService.addThemeTask(theme4, task19);
        Task task20 = new Task("Использование встроенного сервера Tomcat", LocalDateTime.now(), "Запустите Spring Boot приложение на встроенном сервере Tomcat.", null);
        taskService.save(task20);
        taskService.addThemeTask(theme4, task20);
        Task task21 = new Task("Создание контроллера", LocalDateTime.now(), "Создайте контроллер для RESTful веб-сервиса.", null);
        taskService.save(task21);
        taskService.addThemeTask(theme5, task21);
        Task task22 = new Task("Обработка запросов GET", LocalDateTime.now(), "Напишите метод контроллера для обработки GET запросов.", null);
        taskService.save(task22);
        taskService.addThemeTask(theme5, task22);
        Task task23 = new Task("Обработка запросов POST", LocalDateTime.now(), "Напишите метод контроллера для обработки POST запросов.", null);
        taskService.save(task23);
        taskService.addThemeTask(theme5, task23);
        Task task24 = new Task("Обработка запросов PUT и DELETE", LocalDateTime.now(), "Напишите методы контроллера для обработки PUT и DELETE запросов.", null);
        taskService.save(task24);
        taskService.addThemeTask(theme5, task24);
        Task task25 = new Task("Использование аннотаций @RequestMapping и @ResponseBody", LocalDateTime.now(), "Используйте аннотации @RequestMapping и @ResponseBody для настройки обработки запросов.", null);
        taskService.save(task25);
        taskService.addThemeTask(theme5, task25);
        Task task26 = new Task("Подключение к базе данных", LocalDateTime.now(), "Настройте Spring Boot для подключения к базе данных (например, MySQL).", null);
        taskService.save(task26);
        taskService.addThemeTask(theme6, task26);
        Task task27 = new Task("Создание репозитория", LocalDateTime.now(), "Создайте репозиторий для работы с данными в базе данных.", null);
        taskService.save(task27);
        taskService.addThemeTask(theme6, task27);
        Task task28 = new Task("Использование JPA и Hibernate", LocalDateTime.now(), "Интегрируйте JPA и Hibernate для работы с объектами модели.", null);
        taskService.save(task28);
        taskService.addThemeTask(theme6, task28);
        Task task29 = new Task("Выполнение CRUD операций", LocalDateTime.now(), "Реализуйте CRUD операции (создание, чтение, обновление, удаление) для объектов модели.", null);
        taskService.save(task29);
        taskService.addThemeTask(theme6, task29);
        Task task30 = new Task("Транзакции и управление доступом", LocalDateTime.now(), "Настройте транзакции и управление доступом к данным в базе данных.", null);
        taskService.save(task30);
        taskService.addThemeTask(theme6, task30);

        Task task31 = new Task("Введение в машинное обучение", LocalDateTime.now(), "Изучите основные понятия и принципы машинного обучения.", null);
        taskService.save(task31);
        taskService.addThemeTask(theme7, task31);
        Task task32 = new Task("Типы задач машинного обучения", LocalDateTime.now(), "Ознакомьтесь с различными типами задач машинного обучения (классификация, регрессия, кластеризация).", null);
        taskService.save(task32);
        taskService.addThemeTask(theme7, task32);
        Task task33 = new Task("Преимущества и ограничения машинного обучения", LocalDateTime.now(), "Определите преимущества и ограничения машинного обучения в различных областях.", null);
        taskService.save(task33);
        taskService.addThemeTask(theme7, task33);
        Task task34 = new Task("История машинного обучения", LocalDateTime.now(), "Изучите историю развития машинного обучения и его основные этапы.", null);
        taskService.save(task34);
        taskService.addThemeTask(theme7, task34);
        Task task35 = new Task("Применение машинного обучения в реальных задачах", LocalDateTime.now(), "Приведите примеры применения машинного обучения в реальных задачах (например, распознавание изображений, прогнозирование погоды).", null);
        taskService.save(task35);
        taskService.addThemeTask(theme7, task35);
        Task task36 = new Task("Установка и настройка Python для машинного обучения", LocalDateTime.now(), "Установите Python и необходимые библиотеки для машинного обучения.", null);
        taskService.save(task36);
        taskService.addThemeTask(theme8, task36);
        Task task37 = new Task("Использование NumPy для работы с массивами", LocalDateTime.now(), "Используйте библиотеку NumPy для выполнения математических операций с массивами.", null);
        taskService.save(task37);
        taskService.addThemeTask(theme8, task37);
        Task task38 = new Task("Применение Pandas для анализа данных", LocalDateTime.now(), "Используйте библиотеку Pandas для загрузки, очистки и анализа данных.", null);
        taskService.save(task38);
        taskService.addThemeTask(theme8, task38);
        Task task39 = new Task("Использование Matplotlib для визуализации данных", LocalDateTime.now(), "Создайте графики и диаграммы с помощью библиотеки Matplotlib.", null);
        taskService.save(task39);
        taskService.addThemeTask(theme8, task39);
        Task task40 = new Task("Работа с библиотекой Scikit-learn", LocalDateTime.now(), "Ознакомьтесь с основными функциями библиотеки Scikit-learn для машинного обучения.", null);
        taskService.save(task40);
        taskService.addThemeTask(theme8, task40);
        Task task41 = new Task("Линейная регрессия", LocalDateTime.now(), "Реализуйте модель линейной регрессии для прогнозирования цен на недвижимость.", null);
        taskService.save(task41);
        taskService.addThemeTask(theme9, task41);
        Task task42 = new Task("Логистическая регрессия", LocalDateTime.now(), "Создайте модель логистической регрессии для классификации изображений.", null);
        taskService.save(task42);
        taskService.addThemeTask(theme9, task42);
        Task task43 = new Task("Деревья решений", LocalDateTime.now(), "Используйте деревья решений для классификации данных.", null);
        taskService.save(task43);
        taskService.addThemeTask(theme9, task43);
        Task task44 = new Task("Метод опорных векторов (SVM)", LocalDateTime.now(), "Реализуйте модель SVM для классификации данных.", null);
        taskService.save(task44);
        taskService.addThemeTask(theme9, task44);
        Task task45 = new Task("Нейронные сети", LocalDateTime.now(), "Создайте простую нейронную сеть для распознавания рукописных цифр.", null);
        taskService.save(task45);
        taskService.addThemeTask(theme9, task45);

        Task task46 = new Task("Создание базовой структуры HTML-документа", LocalDateTime.now(), "Создайте HTML-документ, включающий заголовок, тело и нижний колонтитул.", null);
        taskService.save(task46);
        taskService.addThemeTask(theme10, task46);
        Task task47 = new Task("Использование заголовков и абзацев", LocalDateTime.now(), "Добавьте заголовки и абзацы в HTML-документ.", null);
        taskService.save(task47);
        taskService.addThemeTask(theme10, task47);
        Task task48 = new Task("Вставка изображений и ссылок", LocalDateTime.now(), "Вставьте изображение и ссылку в HTML-документ.", null);
        taskService.save(task48);
        taskService.addThemeTask(theme10, task48);
        Task task49 = new Task("Создание списков", LocalDateTime.now(), "Создайте маркированный и нумерованный списки.", null);
        taskService.save(task49);
        taskService.addThemeTask(theme10, task49);
        Task task50 = new Task("Использование форм", LocalDateTime.now(), "Создайте простую форму с полями ввода и кнопкой отправки.", null);
        taskService.save(task50);
        taskService.addThemeTask(theme10, task50);
        Task task51 = new Task("Базовая структура CSS-файла", LocalDateTime.now(), "Создайте CSS-файл и подключите его к HTML-документу.", null);
        taskService.save(task51);
        taskService.addThemeTask(theme11, task51);
        Task task52 = new Task("Селекторы и свойства", LocalDateTime.now(), "Используйте селекторы и свойства для стилизации элементов HTML.", null);
        taskService.save(task52);
        taskService.addThemeTask(theme11, task52);
        Task task53 = new Task("Блочная модель и отступы", LocalDateTime.now(), "Настройте блочную модель и отступы для элементов.", null);
        taskService.save(task53);
        taskService.addThemeTask(theme11, task53);
        Task task54 = new Task("Медиа-запросы", LocalDateTime.now(), "Используйте медиа-запросы для адаптации стилей под разные устройства.", null);
        taskService.save(task54);
        taskService.addThemeTask(theme11, task54);
        Task task55 = new Task("Псевдоклассы и псевдоэлементы", LocalDateTime.now(), "Используйте псевдоклассы и псевдоэлементы для стилизации состояний элементов.", null);
        taskService.save(task55);
        taskService.addThemeTask(theme11, task55);
        Task task56 = new Task("Основы JavaScript", LocalDateTime.now(), "Изучите основные концепции JavaScript, такие как переменные, типы данных и операторы.", null);
        taskService.save(task56);
        taskService.addThemeTask(theme12, task56);
        Task task57 = new Task("Функции и условные операторы", LocalDateTime.now(), "Напишите функцию и используйте условные операторы для выполнения различных действий.", null);
        taskService.save(task57);
        taskService.addThemeTask(theme12, task57);
        Task task58 = new Task("Циклы и массивы", LocalDateTime.now(), "Используйте циклы и массивы для выполнения повторяющихся задач.", null);
        taskService.save(task58);
        taskService.addThemeTask(theme12, task58);
        Task task59 = new Task("Объекты и методы", LocalDateTime.now(), "Создайте объект и методы для работы с данными.", null);
        taskService.save(task59);
        taskService.addThemeTask(theme12, task59);
        Task task60 = new Task("Работа с DOM", LocalDateTime.now(), "Измените элементы на странице с помощью JavaScript и DOM.", null);
        taskService.save(task60);
        taskService.addThemeTask(theme12, task60);

        Task task61 = new Task("Введение в кибербезопасность", LocalDateTime.now(), "Изучите основные понятия и принципы кибербезопасности.", null);
        taskService.save(task61);
        taskService.addThemeTask(theme13, task61);
        Task task62 = new Task("Угрозы и уязвимости", LocalDateTime.now(), "Ознакомьтесь с различными типами угроз и уязвимостей в киберпространстве.", null);
        taskService.save(task62);
        taskService.addThemeTask(theme13, task62);
        Task task63 = new Task("История кибербезопасности", LocalDateTime.now(), "Изучите историю развития кибербезопасности и основные этапы.", null);
        taskService.save(task63);
        taskService.addThemeTask(theme13, task63);
        Task task64 = new Task("Правовые аспекты", LocalDateTime.now(), "Ознакомьтесь с основными правовыми аспектами кибербезопасности.", null);
        taskService.save(task64);
        taskService.addThemeTask(theme13, task64);
        Task task65 = new Task("Этические вопросы", LocalDateTime.now(), "Рассмотрите этические вопросы, связанные с кибербезопасностью.", null);
        taskService.save(task65);
        taskService.addThemeTask(theme13, task65);
        Task task66 = new Task("Симметричное шифрование", LocalDateTime.now(), "Реализуйте алгоритм симметричного шифрования (например, AES).", null);
        taskService.save(task66);
        taskService.addThemeTask(theme14, task66);
        Task task67 = new Task("Асимметричное шифрование", LocalDateTime.now(), "Реализуйте алгоритм асимметричного шифрования (например, RSA).", null);
        taskService.save(task67);
        taskService.addThemeTask(theme14, task67);
        Task task68 = new Task("Хеширование", LocalDateTime.now(), "Используйте хеш-функции для проверки целостности данных.", null);
        taskService.save(task68);
        taskService.addThemeTask(theme14, task68);
        Task task69 = new Task("Аутентификация", LocalDateTime.now(), "Реализуйте систему аутентификации на основе паролей и токенов.", null);
        taskService.save(task69);
        taskService.addThemeTask(theme14, task69);
        Task task70 = new Task("Многофакторная аутентификация", LocalDateTime.now(), "Создайте систему многофакторной аутентификации.", null);
        taskService.save(task70);
        taskService.addThemeTask(theme14, task70);
        Task task71 = new Task("Настройка брандмауэра", LocalDateTime.now(), "Настройте брандмауэр для защиты сети.", null);
        taskService.save(task71);
        taskService.addThemeTask(theme15, task71);
        Task task72 = new Task("Защита от DDoS атак", LocalDateTime.now(), "Изучите методы защиты от DDoS атак.", null);
        taskService.save(task72);
        taskService.addThemeTask(theme15, task72);
        Task task73 = new Task("VPN", LocalDateTime.now(), "Настройте и используйте VPN для защиты данных.", null);
        taskService.save(task73);
        taskService.addThemeTask(theme15, task73);
        Task task74 = new Task("IDS/IPS системы", LocalDateTime.now(), "Изучите принципы работы IDS и IPS систем.", null);
        taskService.save(task74);
        taskService.addThemeTask(theme15, task74);
        Task task75 = new Task("Защита от фишинга", LocalDateTime.now(), "Разработайте меры по защите от фишинга.", null);
        taskService.save(task75);
        taskService.addThemeTask(theme15, task75);

        ThemeMaterial material1 = new ThemeMaterial("Основы Java", "Учебник", "https://example.org/", "Введение в основные концепции Java.", "История Java, установка среды разработки, переменные, типы данных, операторы.");
        themeMaterialService.save(material1);
        themeMaterialService.addThemeMaterial(theme1, material1);
        themeMaterialService.addThemeMaterial(theme2, material1);
        themeMaterialService.addThemeMaterial(theme3, material1);
        ThemeMaterial material2 = new ThemeMaterial("История Java", "Учебник", "https://example.org/", "Изучение истории развития Java.", "Основные этапы развития, ключевые события и достижения.");
        themeMaterialService.save(material2);
        themeMaterialService.addThemeMaterial(theme1, material2);
        ThemeMaterial material3 = new ThemeMaterial("Основы синтаксиса", "Учебник", "https://example.org/", "Изучение основ синтаксиса Java.", "Синтаксис переменных, типы данных, операторы, условные операторы, циклы.");
        themeMaterialService.save(material3);
        themeMaterialService.addThemeMaterial(theme2, material3);
        ThemeMaterial material4 = new ThemeMaterial("Функции и методы", "Учебник", "https://example.org/", "Введение в функции и методы в Java.", "Определение функций и методов, их использование и создание.");
        themeMaterialService.save(material4);
        themeMaterialService.addThemeMaterial(theme2, material4);
        ThemeMaterial material5 = new ThemeMaterial("Основы объектно-ориентированного программирования", "Учебник", "https://example.org/", "Введение в основы объектно-ориентированного программирования.", "Определение классов и объектов, инкапсуляция, наследование, полиморфизм.");
        themeMaterialService.save(material5);
        themeMaterialService.addThemeMaterial(theme3, material5);
        ThemeMaterial material6 = new ThemeMaterial("Создание классов и объектов", "Учебник", "https://example.org/", "Создание и использование классов и объектов в Java.", "Примеры создания классов и объектов, методы и конструкторы.");
        themeMaterialService.save(material6);
        themeMaterialService.addThemeMaterial(theme3, material6);
        ThemeMaterial material7 = new ThemeMaterial("Основы Spring Boot", "Учебник", "https://example.org/", "Введение в Spring Boot.", "Определение Spring Boot, его преимущества, установка и настройка.");
        themeMaterialService.save(material7);
        themeMaterialService.addThemeMaterial(theme3, material6);
        themeMaterialService.addThemeMaterial(theme4, material6);
        themeMaterialService.addThemeMaterial(theme5, material6);
        ThemeMaterial material8 = new ThemeMaterial("Конфигурация и зависимости", "Учебник", "https://example.org/", "Конфигурация и управление зависимостями в Spring Boot.", "Конфигурация проекта, управление зависимостями через Maven или Gradle.");
        themeMaterialService.save(material8);
        themeMaterialService.addThemeMaterial(theme4, material8);
        ThemeMaterial material9 = new ThemeMaterial("Основы RESTful веб-сервисов", "Учебник", "https://example.org/", "Введение в RESTful веб-сервисы.", "Определение RESTful веб-сервисов, основные принципы и компоненты.");
        themeMaterialService.save(material9);
        themeMaterialService.addThemeMaterial(theme5, material9);
        ThemeMaterial material10 = new ThemeMaterial("Создание RESTful веб-сервисов в Spring Boot", "Учебник", "https://example.org/", "Создание RESTful веб-сервисов в Spring Boot.", "Примеры создания RESTful веб-сервисов, использование Spring MVC.");
        themeMaterialService.save(material10);
        themeMaterialService.addThemeMaterial(theme5, material10);
        ThemeMaterial material11 = new ThemeMaterial("Основы баз данных", "Учебник", "https://example.org/", "Введение в базы данных.", "Определение баз данных, типы баз данных, основные понятия.");
        themeMaterialService.save(material11);
        themeMaterialService.addThemeMaterial(theme6, material11);
        ThemeMaterial material12 = new ThemeMaterial("Интеграция с базами данных в Spring Boot", "Учебник", "https://example.org/", "Интеграция с базами данных в Spring Boot.", "Примеры интеграции с MySQL, PostgreSQL и другими базами данных.");
        themeMaterialService.save(material12);
        themeMaterialService.addThemeMaterial(theme6, material12);
        ThemeMaterial material13 = new ThemeMaterial("Основы машинного обучения", "Учебник", "https://example.org/", "Введение в основы машинного обучения.", "Определение машинного обучения, его типы, основные алгоритмы.");
        themeMaterialService.save(material13);
        themeMaterialService.addThemeMaterial(theme7, material13);
        ThemeMaterial material14 = new ThemeMaterial("Практические примеры машинного обучения", "Учебник", "https://example.org/", "Практические примеры машинного обучения.", "Примеры использования алгоритмов машинного обучения, такие как линейная регрессия и деревья решений.");
        themeMaterialService.save(material14);
        themeMaterialService.addThemeMaterial(theme7, material14);
        ThemeMaterial material15 = new ThemeMaterial("Основы библиотек Python", "Учебник", "https://example.org/", "Введение в библиотеки Python.", "Определение библиотек Python, их преимущества, основные библиотеки.");
        themeMaterialService.save(material15);
        themeMaterialService.addThemeMaterial(theme8, material15);
        ThemeMaterial material16 = new ThemeMaterial("Использование библиотек в Python", "Учебник", "https://example.org/", "Использование библиотек в Python.", "Примеры использования библиотек NumPy, Pandas, Matplotlib и других.");
        themeMaterialService.save(material16);
        themeMaterialService.addThemeMaterial(theme8, material16);
        ThemeMaterial material17 = new ThemeMaterial("Основы обучения моделей", "Учебник", "https://example.org/", "Введение в обучение моделей.", "Определение обучения моделей, этапы процесса, выбор моделей.");
        themeMaterialService.save(material17);
        themeMaterialService.addThemeMaterial(theme9, material17);
        ThemeMaterial material18 = new ThemeMaterial("Практическое обучение моделей", "Учебник", "https://example.org/", "Практическое обучение моделей.", "Примеры обучения моделей, такие как логистическая регрессия и нейронные сети.");
        themeMaterialService.save(material18);
        themeMaterialService.addThemeMaterial(theme9, material18);
        ThemeMaterial material19 = new ThemeMaterial("Основы HTML", "Учебник", "https://example.org/", "Введение в основы HTML.", "Определение HTML, основные теги, структура HTML-документа.");
        themeMaterialService.save(material19);
        themeMaterialService.addThemeMaterial(theme10, material19);
        ThemeMaterial material20 = new ThemeMaterial("Практическое использование HTML", "Учебник", "https://example.org/", "Практическое использование HTML.", "Примеры создания HTML-страниц, использование HTML-элементов.");
        themeMaterialService.save(material20);
        themeMaterialService.addThemeMaterial(theme10, material20);
        ThemeMaterial material21 = new ThemeMaterial("Основы CSS", "Учебник", "https://example.org/", "Введение в основы CSS.", "Определение CSS, синтаксис, основные селекторы.");
        themeMaterialService.save(material21);
        themeMaterialService.addThemeMaterial(theme11, material21);
        ThemeMaterial material22 = new ThemeMaterial("Практическое использование CSS", "Учебник", "https://example.org/", "Практическое использование CSS.", "Примеры стилей для HTML-элементов, использование классов и идентификаторов.");
        themeMaterialService.save(material22);
        themeMaterialService.addThemeMaterial(theme11, material22);
        ThemeMaterial material23 = new ThemeMaterial("Основы JavaScript", "Учебник", "https://example.org/", "Введение в основы JavaScript.", "Определение JavaScript, синтаксис, переменные, типы данных, операторы.");
        themeMaterialService.save(material23);
        themeMaterialService.addThemeMaterial(theme12, material23);
        ThemeMaterial material24 = new ThemeMaterial("Практическое использование JavaScript", "Учебник", "https://example.org/", "Практическое использование JavaScript.", "Примеры создания интерактивных элементов на веб-странице, использование функций и циклов.");
        themeMaterialService.save(material24);
        themeMaterialService.addThemeMaterial(theme12, material24);
        ThemeMaterial material25 = new ThemeMaterial("Основы кибербезопасности", "Учебник", "https://example.org/", "Введение в основные понятия и принципы кибербезопасности.", "Определение кибербезопасности, основные угрозы и уязвимости, правовые и этические аспекты.");
        themeMaterialService.save(material25);
        themeMaterialService.addThemeMaterial(theme13, material25);
        ThemeMaterial material26 = new ThemeMaterial("История кибербезопасности", "Учебник", "https://example.org/", "Изучение истории развития кибербезопасности.", "Основные этапы развития, ключевые события и достижения.");
        themeMaterialService.save(material26);
        themeMaterialService.addThemeMaterial(theme13, material26);
        ThemeMaterial material27 = new ThemeMaterial("Симметричное шифрование", "Учебник", "https://example.org/", "Введение в симметричное шифрование.", "Описание алгоритма AES, примеры использования.");
        themeMaterialService.save(material27);
        themeMaterialService.addThemeMaterial(theme14, material27);
        ThemeMaterial material28 = new ThemeMaterial("Асимметричное шифрование", "Учебник", "https://example.org/", "Основы асимметричного шифрования.", "Описание алгоритма RSA, примеры реализации.");
        themeMaterialService.save(material28);
        themeMaterialService.addThemeMaterial(theme14, material28);
        ThemeMaterial material29 = new ThemeMaterial("Настройка брандмауэра", "Учебник", "https://example.org/", "Настройка брандмауэра для защиты сети.", "Описание типов брандмауэров, настройка правил фильтрации.");
        themeMaterialService.save(material29);
        themeMaterialService.addThemeMaterial(theme15, material29);
        ThemeMaterial material30 = new ThemeMaterial("Защита от DDoS атак", "Учебник", "https://example.org/", "Методы защиты от DDoS атак.", "Описание типов DDoS атак, методы обнаружения и предотвращения.");
        themeMaterialService.save(material30);
        themeMaterialService.addThemeMaterial(theme15, material30);

        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println("App starts correct");
    }
}